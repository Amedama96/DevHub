[
	{
		"sender": [""],
		"keyword": [""],
		"text": [
              "僕は、偉大なプログラマなんかじゃない。偉大な習慣を身につけたプログラマなんだ。",
              "遅れているソフトウェアプロジェクトへの要員追加はさらに遅らせるだけだ",
              "ソースコードは設計である",
              "プロセスやツールより人と人同士の相互作用を重視するんだ",
              "包括的なドキュメントより動作するソフトウェアを重視するんだ",
              "契約上の交渉よりも顧客との協調を重視するんだ",
              "計画に従うことよりも変化に対応することを重視するんだ",
              "プログラミングの進展をコードの行数で測るのは、飛行機建造の進展を重量で測るようなものだ。",
              "'オープン・クローズドの原則'",
              "'単一責任の原則'",
              "'リスコフの置換原則'",
              "'依存関係逆転の原則' 常に抽象型に依存しよう ",
              "'インターフェイス分離の原則' スリムなインターフェースを作ろう",
              "DRYにいこう",
              "Abstract Factoryパターンは複数の関連するクラスを生成できるよ",
              "Builderパターンは複雑なオブジェクト生成過程をまとめてくれるよ",
              "Factory Methodパターンは具体的なクラス生成をサブクラスに任せるよ",
              "",
              "",
              "",
              "",
              "",
              ""
            ],
		"interval": 4
	}

]
